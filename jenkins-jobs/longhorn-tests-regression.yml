- job:
    concurrent: true
    name: longhorn-tests-regression
    project-type: pipeline
    folder: private
    properties:
      - build-discarder:
          num-to-keep: 300
          artifact-num-to-keep: 10
    parameters:
      - bool:
          name: SEND_SLACK_NOTIFICATION
          default: true
          description: "send slack notification? (default: true)"
      - bool:
          name: USE_HDD
          default: false
          description: "use HDD as Longhorn disks? (default: false)"
      - bool:
          name: ENABLE_MTLS
          default: false
          description: "enable MTLS for grpc communication between longhorn-manager and instance-manager"
      - string:
          name: NOTIFY_SLACK_CHANNEL
          default: ""
          description: "slack Channel ID to send job notification (default: T02RW4JDH)"
      - bool:
          name: AIR_GAP_INSTALLATION
          default: false
          description: "if set to true, a private registry would be setup and longhorn images would be pulled from it (default: false)"
      - string:
          name: LONGHORN_REPO_URI
          default: "https://github.com/longhorn/longhorn.git"
          description: "longhorn repo URI"
      - string:
          name: LONGHORN_REPO_BRANCH
          default: "master"
          description: "longhorn repo branch"
      - string:
          name: CUSTOM_LONGHORN_MANAGER_IMAGE
          default: "longhornio/longhorn-manager:master-head"
          description: "custom longhorn-manager image (e.g USER/longhorn-manager:testing)"
      - string:
          name: CUSTOM_LONGHORN_ENGINE_IMAGE
          default: "longhornio/longhorn-engine:master-head"
          description: "custom longhorn-engine image (e.g USER/longhorn-engine:testing)"
      - string:
          name: CUSTOM_LONGHORN_INSTANCE_MANAGER_IMAGE
          default: ""
          description: "custom longhorn-instance-manager image (e.g USER/longhorn-instance-manager:testing), leave blank to use the default"
      - string:
          name: CUSTOM_LONGHORN_SHARE_MANAGER_IMAGE
          default: ""
          description: "custom longhorn-share-manager image (e.g USER/longhorn-share-manager:testing), leave blank to use the default"
      - string:
          name: CUSTOM_LONGHORN_BACKING_IMAGE_MANAGER_IMAGE
          default: ""
          description: "custom backing-image-manager image (e.g USER/backing-image-manager:testing), leave blank to use the default"
      - string:
          name: LONGHORN_TESTS_CUSTOM_IMAGE
          default: "longhornio/longhorn-manager-test:master-head"
          description: "custom longhorn-manager test image, will be used to run tests"
      - string:
          name: PYTEST_CUSTOM_OPTIONS
          default: ""
          description: "pytest custom options to run specific tests (e.g -k test_hosts)"
      - string:
          name: TF_VAR_tf_workspace
          default: /src/longhorn-tests/test_framework
      - bool:
          name: LONGHORN_UPGRADE_TEST
          default: false
          description: "run longhorn upgrade test, then run longhorn test suite"
      - string:
          name: BACKUP_STORE_TYPE
          default: "s3"
          description: "The valid values for this field are 'nfs', 's3', 'cifs' and 'azurite', any other value provided will use all those four backupstores."
      - string:
          name: LONGHORN_STABLE_VERSION
          default: "v1.7.2"
          description: "longhorn version that will be installed before upgrade, effective only when LONGHORN_UPGRADE_TEST is TRUE"
      - string:
          name: LONGHORN_TRANSIENT_VERSION
          default: ""
          description: "transient longhorn version for 2 stage upgrade test. if provided, longhorn will first install the stable version, and then upgrade to this transient version, and finally upgrade to the version to be tested. effective only when LONGHORN_UPGRADE_TEST is TRUE"
      - string:
          name: LONGHORN_TEST_CLOUDPROVIDER
          default: "aws"
          description: "cloudprovider used to run test suite, supported values:[aws]"
      - string:
          name: AWS_REGION
          default: "us-east-1"
          description: "aws region (e.g us-east-1), effective only when using aws as cloudprovider"
      - string:
          name: AWS_AVAILABILITY_ZONE
          default: "us-east-1a"
          description: "aws availability zone (e.g us-east-1c), effective only when using aws as cloudprovider, choosed based on AWS_REGION value"
      - string:
          name: ARCH
          default: "amd64"
          description: "architecture of created instances used to run integration tests, supported values: [amd64, arm64]"
      - string:
          name: K8S_DISTRO_NAME
          default: "k3s"
          description: "kubernetes distro version to install [rke2, k3s] (default: k3s)"
      - string:
          name: K8S_DISTRO_VERSION
          default: "v1.31.2+k3s1"
          description: |
              kubernetes version that will be deployed
              for rke2: (default: v1.31.2+rke2r1)
              for k3s: (default: v1.31.2+k3s1)
              for talos: (default: v1.30.0)
      - string:
          name: DISTRO
          default: "sles"
          description: "Linux distro used to install on created instances, supported values: [ubuntu, rhel, sles, centos, oracle, rockylinux, sle-micro, talos]"
      - string:
          name: DISTRO_VERSION
          default: "15-sp6"
          description: |
             Linux distro version to install on created instances, choosed based on DISTRO values
             for DISTRO=ubuntu, supported values: [22.04], default: [22.04]
             for DISTRO=sles, supported values: [15-sp6], default: [15-sp6]
             for DISTRO=rockylinux, supported values: [9.3], default: [9.3]
             for DISTRO=rhel, supported values: [9.3.0], default: [9.3.0]
             for DISTRO=oracle, supported values: [9.3], default: [9.3]
             for DISTRO=sle-micro, supported values: [6.0], default: [6.0]
             for DISTRO=talos, supported values: [1.7.6], default: [1.7.6]
      - string:
          name: CONTROLPLANE_INSTANCE_TYPE
          default: "t2.xlarge"
          description: "aws instance type for controlplane nodes"
      - string:
          name: WORKER_INSTANCE_TYPE
          default: "t2.xlarge"
          description: "aws instance type for worker nodes"
      - choice:
          name: SELINUX_MODE
          choices:
          - permissive
          - enforcing
          description: "SELINUX mode [permissive | enforcing] (available only for Rockylinux and RHEL)  default: permissive"
      - bool:
          name: CIS_HARDENING
          default: false
          description: "setup cis-1.23 hardened environment. effective only when rke2 version > v1.25 and distro = sles"
      - string:
          name: CUSTOM_SSH_PUBLIC_KEY
          default: ""
          description: "custom ssh public key for debugging"
      - bool:
          name: PUBLIC_WORKER_NODE
          default: false
          description: "whether to assign public ip for worker nodes"
    pipeline-scm:
      scm:
        - git:
            url: https://github.com/longhorn/longhorn-tests
            branches:
              - master
      script-path: test_framework/Jenkinsfile
      lightweight-checkout: true
