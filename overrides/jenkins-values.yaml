---
controller:
  installPlugins:
  - credentials:2.6.1
  - plugin-util-api:2.4.0
  - font-awesome-api:5.15.4-1
  - pipeline-input-step:2.12
  - junit:1.53
  - pipeline-model-extensions:1.9.1
  - cloudbees-folder:6.16
  - git-server:1.10
  - checks-api:1.7.2
  - workflow-job:2.41
  - bootstrap5-api:5.1.0-3
  - workflow-durable-task-step:2.39
  - jdk-tool:1.0
  - command-launcher:1.2
  - jaxb:2.3.0
  - pipeline-milestone-step:1.3.2
  - branch-api:2.6.5
  - pipeline-graph-analysis:1.11
  - workflow-cps-global-lib:2.21
  - jsch:0.1.55.2
  - plain-credentials:1.7
  - git-client:3.9.0
  - sshd:3.1.0
  - workflow-api:2.46
  - echarts-api:5.1.2-11
  - jackson2-api:2.12.4
  - git:4.8.2
  - pipeline-rest-api:2.19
  - bootstrap4-api:4.6.0-3
  - ssh-credentials:1.19
  - kubernetes-client-api:5.4.1
  - variant:1.4
  - apache-httpcomponents-client-4-api:4.5.13-1.0
  - pipeline-model-api:1.9.1
  - script-security:1.78
  - momentjs:1.1.1
  - credentials-binding:1.27
  - pipeline-stage-step:2.5
  - kubernetes-credentials:0.9.0
  - lockable-resources:2.11
  - pipeline-stage-view:2.19
  - mailer:1.34
  - workflow-multibranch:2.26
  - pipeline-model-definition:1.9.1
  - workflow-step-api:2.24
  - trilead-api:1.0.13
  - configuration-as-code:1.52
  - snakeyaml-api:1.29.1
  - popper2-api:2.9.3-1
  - workflow-aggregator:2.6
  - handlebars:3.0.8
  - workflow-cps:2.93
  - workflow-basic-steps:2.24
  - structs:1.23
  - pipeline-build-step:2.15
  - matrix-project:1.19
  - authentication-tokens:1.4
  - bouncycastle-api:2.24
  - jquery3-api:3.6.0-2
  - workflow-scm-step:2.13
  - ace-editor:1.1
  - caffeine-api:2.9.2-29.v717aac953ff3
  - popper-api:1.16.1-2
  - pipeline-stage-tags-metadata:1.9.1
  - kubernetes:1.30.1
  - workflow-support:3.8
  - durable-task:1.39
  - metrics:4.0.2.8
  - display-url-api:2.3.5
  - scm-api:2.6.5
  - github-oauth:0.33
  - matrix-auth:2.6.8
  - test-results-analyzer:0.3.5
  - slack:2.48
  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1beta1"
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/secure-backends: "true"
    hostName: ci.longhorn.io
    tls:
    - secretName: ci.longhorn.io
      hosts:
      - ci.longhorn.io
  additionalExistingSecrets:
  - name: jenkins-v3-secrets
    keyName: github-oauth-client-id
  - name: jenkins-v3-secrets
    keyName: github-oauth-client-secret
  JCasC:
    defaultConfig: true
    sidecars:
      configAutoReload:
        enabled: true
    securityRealm: |-
        github:
          githubWebUri: "https://github.com"
          githubApiUri: "https://api.github.com"
          clientID: ${jenkins-v3-secrets-github-oauth-client-id}
          clientSecret: ${jenkins-v3-secrets-github-oauth-client-secret}
          oauthScopes: "read:org,user:email"
    authorizationStrategy: |-
        projectMatrix:
          permissions:
            - "Overall/Administer:longhorn*infra"
            - "Overall/Read:longhorn*qa"
            - "Overall/Read:longhorn*dev"
            - "Overall/Read:anonymous"
            - "Job/Read:anonymous"
            - "Job/Build:longhorn*qa"
            - "Job/Build:longhorn*dev"
            - "Job/Cancel:longhorn*qa"
            - "Job/Build:longhorn*dev"
    configScripts:                                                              
      jobs-config: |                                                            
        jobs:                                                                   
          - script: >                                                           
              folder('private') {                                               
                properties {                                                    
                  authorizationMatrix {                                         
                    inheritanceStrategy {                                       
                        nonInheriting()                                         
                    }                                                           
                    permissions([                                               
                        'Job/Read:longhorn*dev',                                
                        'Job/Build:longhorn*dev',                               
                        'Job/Cancel:longhorn*dev',                              
                        'Job/Read:longhorn*qa',                                 
                        'Job/Build:longhorn*qa',                                
                        'Job/Cancel:longhorn*qa',                               
                        'Job/Configure:longhorn*infra',                         
                        'Job/Delete:longhorn*infra',                            
                    ])                                                          
                  }                                                             
                }                                                               
              }
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
persistence:
  enabled: true
  existingClaim: jenkins-v3
agent:
  nodeSelector:
    kubernetes.io/arch: amd64
  image: "meldafrawi/jnlp-agent"
  tag: "20210913"
  privileged: true
  idleMinutes: 20
  resources:
    requests:
      cpu: "600m"
      memory: "1Gi"
    limits:
      cpu: "800m"
      memory: "2Gi"
  volumes:
    - type: HostPath
      hostPath: /var/run/docker.sock
      mountPath: /var/run/docker.sock
