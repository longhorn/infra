---
controller:
  tag: "2.401.1-jdk11"
  overwritePlugins: false
  installPlugins:
  - kubernetes-client-api
  - kubernetes-credentials
  - kubernetes
  - configuration-as-code
# ----------------------
  - ace-editor
  - ant
  - antisamy-markup-formatter
  - apache-httpcomponents-client-4-api
  - badge
  - blueocean-commons
  - blueocean-pipeline-scm-api
  - blueocean-rest
  - bootstrap4-api
  - bootstrap5-api
  - bouncycastle-api
  - branch-api
  - build-timeout
  - caffeine-api
  - checks-api
  - cloudbees-folder
  - command-launcher
  - credentials-binding
  - credentials
  - display-url-api
  - display-url-api
  - durable-task
  - echarts-api
  - email-ext
  - extended-choice-parameter
  - font-awesome-api
  - git-client
  - git-server
  - git
  - github-api
  - github-branch-source
  - github-oauth
  - github
  - gradle
  - groovy-postbuild
  - handlebars
  - htmlpublisher
  - jackson2-api
  - javax-activation-api
  - javax-mail-api
  - jaxb
  - jdk-tool
  - jjwt-api
  - jnr-posix-api
  - job-dsl
  - job-dsl
  - jquery3-api
  - jsch
  - junit
  - ldap
  - lockable-resources
  - mailer
  - matrix-auth
  - matrix-project
  - metrics
  - momentjs
  - okhttp-api
  - pam-auth
  - parameterized-scheduler
  - pipeline-build-step
  - pipeline-github-lib
  - pipeline-graph-analysis
  - pipeline-input-step
  - pipeline-milestone-step
  - pipeline-model-api
  - pipeline-model-definition
  - pipeline-model-extensions
  - pipeline-rest-api
  - pipeline-stage-step
  - pipeline-stage-tags-metadata
  - pipeline-stage-view
  - plain-credentials
  - plugin-util-api
  - popper-api
  - popper2-api
  - pubsub-light
  - resource-disposer
  - robot
  - scm-api
  - scm-api
  - script-security
  - slack
  - snakeyaml-api
  - ssh-credentials
  - ssh-slaves
  - sshd
  - structs
  - test-results-analyzer
  - timestamper
  - token-macro
  - trilead-api
  - uno-choice
  - workflow-aggregator
  - workflow-api
  - workflow-basic-steps
  - workflow-cps-global-lib
  - workflow-cps
  - workflow-durable-task-step
  - workflow-job
  - workflow-multibranch
  - workflow-scm-step
  - workflow-step-api
  - workflow-support
  - ws-cleanup
  resources:
    requests:
      cpu: "2000m"
      memory: "4Gi"
    limits:
      cpu: "4000m"
      memory: "10Gi"
  containerEnv:
    - name: _JAVA_OPTIONS
      value: "-Xms2048M -Xmx8192M"
  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1beta1"
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/secure-backends: "true"
    hostName: ci.longhorn.io
    tls:
    - secretName: ci.longhorn.io
      hosts:
      - ci.longhorn.io
  additionalExistingSecrets:
  - name: jenkins-v3-secrets
    keyName: github-oauth-client-id
  - name: jenkins-v3-secrets
    keyName: github-oauth-client-secret
  JCasC:
    defaultConfig: true
    sidecars:
      configAutoReload:
        enabled: true
    securityRealm: |-
        github:
          githubWebUri: "https://github.com"
          githubApiUri: "https://api.github.com"
          clientID: ${jenkins-v3-secrets-github-oauth-client-id}
          clientSecret: ${jenkins-v3-secrets-github-oauth-client-secret}
          oauthScopes: "read:org,user:email"
    authorizationStrategy: |-
        projectMatrix:
          permissions:
            - "Overall/Administer:longhorn*infra"
            - "Overall/Read:longhorn*qa"
            - "Overall/Read:longhorn*dev"
            - "Overall/Read:anonymous"
            - "Job/Read:anonymous"
            - "Job/Build:longhorn*dev"            
            - "Job/Build:longhorn*qa"
            - "Job/Cancel:longhorn*dev"
            - "Job/Cancel:longhorn*qa"
    configScripts:
      jobs-config: |                                                            
        jobs:                                                                   
          - script: >                                                           
              folder('private') {                                               
                properties {                                                    
                  authorizationMatrix {                                         
                    inheritanceStrategy {                                       
                        nonInheriting()                                         
                    }
                    entries {
                      group {
                        name('longhorn*dev')
                        permissions([
                          'Job/Read', 'Job/Build', 'Job/Cancel'
                        ])
                      }
                      group {
                        name('longhorn*qa')
                        permissions([
                          'Job/Read', 'Job/Build', 'Job/Cancel'
                        ])
                      }
                      group {
                        name('longhorn*infra')
                        permissions([
                          'Job/Configure', 'Job/Delete'
                        ])
                      }
                    }                                                        
                  }                                                             
                }                                                               
              }
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
  nodeSelector:
    beta.kubernetes.io/arch: amd64
    k3s.io/hostname: longhorn-infra-controlplane-2
persistence:
  enabled: true
  existingClaim: jenkins-v3
agent:
  nodeSelector:
    beta.kubernetes.io/arch: amd64
  image: "meldafrawi/jnlp-agent"
  tag: "20220310"
  jenkinsUrl: "https://ci.longhorn.io"
  maxRequestsPerHostStr: "1024"
  containerCap: 64
  privileged: true
  idleMinutes: 20
  resources:
    requests:
      cpu: "600m"
      memory: "2Gi"
    limits:
      cpu: "800m"
      memory: "4Gi"
  volumes:
    - type: HostPath
      hostPath: /var/run/docker.sock
      mountPath: /var/run/docker.sock
    - type: HostPath
      hostPath: /home/jenkins/.cache
      mountPath: /home/jenkins/.cache